[OSEv3:children]
masters
etcd
nodes
glusterfs

[OSEv3:vars]
debug_level=2
ansible_user=ec2-user
ansible_become=yes
openshift_deployment_type=openshift-enterprise
openshift_release=v3.9
openshift_master_api_port=443
openshift_master_console_port=443
openshift_portal_net=172.30.0.0/16
os_sdn_network_plugin_name={{ os_sdn_network_plugin_name | default('redhat/openshift-ovs-multitenant') }}
openshift_master_cluster_method=native
openshift_node_local_quota_per_fsgroup=512Mi
osm_use_cockpit=true
openshift_hostname_check=false
openshift_examples_modify_imagestreams=true
oreg_url=registry.access.redhat.com/openshift3/ose-${component}:${version}

openshift_hosted_router_selector='region=infra'
openshift_hosted_router_replicas={{ ec2_count_infra }}

{% if osm_project_request_message is defined %}
osm_project_request_message="{{ osm_project_request_message }}"
{% endif %}

# UPDATE USING VALUES FOUND IN awscli env vars or ~/playbooks/var/main.yaml
# SEE ALSO FILE ~/.ssh/config-< CLUSTERID >.< DNS_DOMAIN >-urls
openshift_master_default_subdomain={{ router_lb_default_subdomain | default('apps.change.me') }}
openshift_master_cluster_hostname={{ master_lb_dns | default('master.change.me') }}
openshift_master_cluster_public_hostname={{ master_lb_dns | default('master.change.me') }}

{% if deploy_cns | default(true) | bool %}
# CNS Bug https://bugzilla.redhat.com/show_bug.cgi?id=1581622
openshift_storage_glusterfs_heketi_image=registry.access.redhat.com/rhgs3/rhgs-volmanager-rhel7
openshift_storage_glusterfs_image=registry.access.redhat.com/rhgs3/rhgs-server-rhel7
openshift_storage_glusterfs_block_image=registry.access.redhat.com/rhgs3/rhgs-gluster-block-prov-rhel7
openshift_storage_glusterfs_s3_image=registry.access.redhat.com/rhgs3/rhgs-gluster-s3-server-rhel7#

# Gluster Default SC
openshift_storage_glusterfs_storageclass_default=true
openshift_storageclass_default=False

{% else %}
# StorageClass if not CNS
openshift_storageclass_default=true
{% endif %}

{% if router_cert is defined %}
####################
## custom certs
## Router
#####################
openshift_hosted_router_certificate={{ router_cert }}
{% endif %}

{% if master_cert is defined %}
# MASTER/API
openshift_master_overwrite_named_certificates=true
openshift_master_named_certificates={{ master_cert }}
{% endif %}


{% if openshift_master_identity_providers is defined %}
openshift_master_identity_providers={{ openshift_master_identity_providers }}
{% else %}
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
{% endif %}

{% if openshift_master_htpasswd_users is defined %}
openshift_master_htpasswd_users={{ openshift_master_htpasswd_users }}
{% else %}
# admin:changeme
openshift_master_htpasswd_users={'admin': '$apr1$VZeARzoK$zYM/4c82PKDeYmw6/RvOV/'}
{% endif %}
openshift_master_manage_htpasswd=true

# UPDATE USING VALUES FOUND IN FILE ~/.ssh/config-< CLUSTERID >.< DNS_DOMAIN >-cpk
{{ lookup('file', (
                   '~/.ssh/config-' +
                    clusterid +
                    '.' +
                    dns_domain +
                    '-cpk'
                  ) ) |
                  regex_replace(".* OUTPUT .*", '') |
                  trim }}


# UPDATE USING VALUES FOUND IN FILE ~/.ssh/config-< CLUSTERID >.< DNS_DOMAIN >-s3
{{ lookup('file', (
                   '~/.ssh/config-' +
                    clusterid +
                    '.' +
                    dns_domain +
                    '-s3'
                  ) ) |
                  regex_replace(".* OUTPUT .*", '') |
                  trim }}

# prometheus
{% if deploy_prometheus | default(true) | bool %}
openshift_hosted_prometheus_deploy=true
openshift_prometheus_storage_kind=dynamic
openshift_prometheus_storage_type=pvc
openshift_prometheus_storage_volume_size={{ prometheus_volume_size | default('20Gi') }}
openshift_prometheus_alertmanager_storage_type=pvc
openshift_prometheus_alertmanager_pvc_size=10Gi
openshift_prometheus_alertmanager_pvc_name=alertmanager
openshift_prometheus_alertbuffer_storage_type=pvc
{% else %}
openshift_hosted_prometheus_deploy=false
{% endif %}

# grafana
{% if deploy_prometheus | default(true) | bool %}
openshift_grafana_state=present
openshift_grafana_node_exporter=true
openshift_grafana_storage_type=pvc
{% else %}
openshift_grafana_state=absent
{% endif %}

# Aggregated logging
openshift_logging_install_logging={{ deploy_logging | default('True') }}
openshift_logging_storage_kind=dynamic
openshift_logging_storage_volume_size={{ logging_volume_size | default('25Gi') }}
openshift_logging_es_cluster_size={{ ec2_count_infra }}

# Metrics
openshift_metrics_install_metrics={{ deploy_metrics | default('True')}}
openshift_metrics_storage_kind=dynamic
openshift_metrics_storage_volume_size={{ metrics_volume_size | default('25Gi') }}

openshift_enable_service_catalog={{ deploy_service_catalog | default('True') }}
template_service_broker_install={{ deploy_template_service_broker | default('True') }}

{{ lookup('file', (
                   '~/.ssh/config-' +
                    clusterid +
                    '.' +
                    dns_domain +
                    '-hosts'
                  ) ) }}


[glusterfs]
