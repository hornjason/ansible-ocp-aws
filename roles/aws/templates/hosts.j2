[OSEv3:children]
masters
etcd
nodes
{% if deploy_ocs |default('true') | bool and deploy_ocs is defined %}
{% if ec2_count_infra + ec2_count_node >= 6 %}
glusterfs
glusterfs_registry
{% else %}
glusterfs
{% endif %}
{% endif %}

[OSEv3:vars]
{% if oreg_auth_user is defined and oreg_auth_password is defined %}
oreg_auth_user={{ oreg_auth_user | default('') }}
oreg_auth_password={{ oreg_auth_password | default('') }}
{% endif %}

{% if oreg_url is defined and oreg_url != '' %}
oreg_url={{ oreg_url }}
openshift_docker_insecure_registries={{ openshift_docker_insecure_registries }}
{% if openshift_docker_additional_registries is defined %}
openshift_docker_additional_registries={{ openshift_docker_additional_registries }}
{% endif %}
{% if openshift_docker_blocked_registries is defined %}
openshift_docker_blocked_registries={{ openshift_docker_blocked_registries }}
{% endif %}
openshift_examples_modify_imagestreams=true
{% else %}
oreg_url=registry.access.redhat.com/openshift3/ose-${component}:${version}
{% endif %}

{% if openshift_disable_check is defined %}
{% if oreg_url is defined %}
openshift_disable_check={{ openshift_disable_check }},docker_image_availability
{% else %}
openshift_disable_check={{ openshift_disable_check }}
{% endif %}
{% endif %}

{% if router_cert is defined %}
############################
## custom certs
## Router
############################
openshift_hosted_router_certificate={{ router_cert }}
{% endif %}

{% if master_cert is defined %}
# MASTER/API
openshift_master_overwrite_named_certificates=true
openshift_master_named_certificates={{ master_cert }}
{% endif %}
{% if openshift_master_identity_providers is defined %}
openshift_master_identity_providers={{ openshift_master_identity_providers }}
{% else %}
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]
{% endif %}
{% if openshift_master_htpasswd_users is defined %}
openshift_master_htpasswd_users={{ openshift_master_htpasswd_users }}
{% else %}
# admin:changeme
openshift_master_htpasswd_users={'admin': '$apr1$VZeARzoK$zYM/4c82PKDeYmw6/RvOV/'}
{% endif %}
openshift_master_manage_htpasswd=true

{% if osm_project_request_message is defined %}
osm_project_request_message="{{ osm_project_request_message }}"
{% endif %}

{% if osm_cluster_network_cidr is defined %}
osm_cluster_network_cidr={{ osm_cluster_network_cidr }}
{% endif %}
{% if openshift_portal_net is defined %}
openshift_portal_net={{ openshift_portal_net }}
{% endif %}
os_sdn_network_plugin_name={{ os_sdn_network_plugin_name | default('redhat/openshift-ovs-multitenant') }}

openshift_master_cluster_method=native
openshift_node_local_quota_per_fsgroup=512Mi
# UPDATE USING VALUES FOUND IN awscli env vars or ~/playbooks/var/main.yaml
# SEE ALSO FILE ~/.ssh/config-< CLUSTERID >.< DNS_DOMAIN >-urls
openshift_master_default_subdomain={{ router_lb_default_subdomain | default('apps.change.me') }}
openshift_master_cluster_hostname={{ master_lb_dns | default('master.change.me') }}
openshift_master_cluster_public_hostname={{ master_lb_dns | default('master.change.me') }}
debug_level=2
ansible_user=ec2-user
ansible_become=yes
openshift_deployment_type=openshift-enterprise
openshift_release=v3.11
openshift_master_api_port=443
openshift_master_console_port=443
osm_use_cockpit=False
openshift_hostname_check=False
openshift_examples_modify_imagestreams=true

openshift_node_open_ports=[{"service":"router_health","port":"1936/tcp"}]
openshift_hosted_router_replicas={{ ec2_count_infra }}

# Operator Lifecycle Manager ( Tech Preview )
openshift_enable_olm=true

# logging
{% if deploy_logging | default('True') | bool %}
openshift_logging_install_logging=True
openshift_logging_es_memory_limit={{ openshift_logging_es_memory_limit | default(omit) }}
{% if deploy_ocs | default(true) | bool %}
openshift_logging_es_pvc_dynamic=True
openshift_logging_es_pvc_size={{ logging_volume_size }}
openshift_logging_es_pvc_storage_class_name='glusterfs-registry-block'
{% endif %}
openshift_logging_es_cluster_size={{ ec2_count_infra }}
openshift_logging_kibana_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_curator_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_logging_es_nodeselector={"node-role.kubernetes.io/infra": "true"}
{% else %}
openshift_logging_install_logging=False
{% endif %}

# metrics
{% if deploy_metrics | default('True') | bool %}
openshift_metrics_install_metrics=True
{% if deploy_ocs | default(true) | bool %}
openshift_metrics_storage_kind=dynamic
openshift_metrics_cassandra_pvc_storage_class_name='glusterfs-registry-block'
{% endif %}
openshift_metrics_storage_volume_size={{ metrics_volume_size }}
openshift_metrics_hawkular_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_cassandra_nodeselector={"node-role.kubernetes.io/infra": "true"}
openshift_metrics_heapster_nodeselector={"node-role.kubernetes.io/infra": "true"}
{% else %}
openshift_metrics_install_metrics=False
{% endif %}


# Prometheus
{% if deploy_prometheus | default(True) | bool %}
openshift_cluster_monitoring_operator_install=True
{% if deploy_ocs | default(true) | bool %}
openshift_cluster_monitoring_operator_prometheus_storage_capacity="{{ prometheus_volume_size | default('50') }}Gi"
openshift_cluster_monitoring_operator_prometheus_storage_enabled=True
openshift_cluster_monitoring_operator_prometheus_storage_class_name='glusterfs-registry-block'
{% endif %}
openshift_cluster_monitoring_operator_alertmanager_enabled=True
openshift_cluster_monitoring_operator_prometheus_enabled=True
{% else %}
openshift_cluster_monitoring_operator_install=False
{% endif %}


{% if deploy_ocs | default(true) | bool %}
############################
# OCS
############################
# OCS Cnfiguration
# Container image to use for glusterfs pods
openshift_storage_glusterfs_image="registry.access.redhat.com/rhgs3/rhgs-server-rhel7:v3.10"

# Container image to use for glusterblock-provisioner pod
openshift_storage_glusterfs_block_image="registry.access.redhat.com/rhgs3/rhgs-gluster-block-prov-rhel7:v3.10"

# Container image to use for heketi pods
openshift_storage_glusterfs_heketi_image="registry.access.redhat.com/rhgs3/rhgs-volmanager-rhel7:v3.10"

# Container image to user for S3
openshift_storage_glusterfs_s3_image=registry.access.redhat.com/rhgs3/rhgs-gluster-s3-server-rhel7:v3.10"

# Cluster 1
# Total Storage allocated (GB) = {{ ocs_infra_cluster_allocated_storage }}
# Total Storage available (GB) = {{ ocs_infra_cluster_usable_storage }}
{% if ec2_count_infra + ec2_count_node >= 6 %}
# Cluster 2
# Total Storage allocated (GB) = 0
# Total Storage available (GB) = {{ ocs_app_cluster_usable_storage }}

# CNS storage cluster
openshift_storage_glusterfs_namespace=app-storage
openshift_storage_glusterfs_storageclass=true
openshift_storage_glusterfs_storageclass_default=True
openshift_storage_glusterfs_block_deploy=True
openshift_storage_glusterfs_block_host_vol_create=false
openshift_storage_glusterfs_block_host_vol_size=100
openshift_storage_glusterfs_block_storageclass=false
openshift_storage_glusterfs_block_storageclass_default=false
{% endif %}

# CNS storage for OpenShift infrastructure
openshift_storage_glusterfs_registry_namespace=infra-storage
{% if ec2_count_infra + ec2_count_node >= 6 %}
openshift_storage_glusterfs_registry_storageclass=false
{% else %}
openshift_storage_glusterfs_registry_storageclass=True
{% endif %}
openshift_storage_glusterfs_registry_block_deploy=true
openshift_storage_glusterfs_registry_block_host_vol_create=true
openshift_storage_glusterfs_registry_block_host_vol_size={{ ocs_infra_cluster_allocated_storage }}
openshift_storage_glusterfs_registry_block_storageclass=true
openshift_storage_glusterfs_registry_block_storageclass_default=false

{% else %}
# StorageClass if not OCS
openshift_storageclass_default=true
{% endif %}

# End deploy_ocs FALSE
# Registry
openshift_hosted_manage_registry=true
openshift_hosted_registry_storage_kind=object
openshift_hosted_registry_storage_provider=s3
openshift_hosted_registry_storage_s3_accesskey={{ s3_access_key }}
openshift_hosted_registry_storage_s3_secretkey={{ s3_secret_key }}
openshift_hosted_registry_storage_s3_bucket={{ clusterid }}.{{ dns_domain }}-registry
openshift_hosted_registry_storage_s3_region={{ aws_region }}
openshift_hosted_registry_storage_s3_chunksize=26214400
openshift_hosted_registry_storage_s3_rootdirectory=/registry
openshift_hosted_registry_pullthrough=true
openshift_hosted_registry_acceptschema2=true
openshift_hosted_registry_enforcequota=true
#openshift_hosted_registry_replicas={{ ec2_count_infra }}
openshift_hosted_registry_selector="node-role.kubernetes.io/infra=true"

# cloudprovider
openshift_cloudprovider_kind=aws
openshift_clusterid={{ clusterid }}
openshift_cloudprovider_aws_access_key={{ cpk_access_key }}
openshift_cloudprovider_aws_secret_key={{ cpk_secret_key }}
openshift_enable_service_catalog={{ deploy_service_catalog | default('True') }}
template_service_broker_install={{ deploy_template_service_broker | default('True') }}

[masters]
{% for i in range(0, ( ec2_count_master if ec2_count_master is defined else 3 ) ) %}
master{{ i + 1 }}.{{ clusterid }}.{{ dns_domain }}  openshift_node_group_name='node-config-master'
{% endfor %}

[etcd]

[etcd:children]
masters

[nodes]
{% for i in range(0, ( ec2_count_node if ec2_count_node is defined else 3 ) ) %}
node{{ i + 1 }}.{{ clusterid }}.{{ dns_domain }}  openshift_node_group_name='node-config-compute'
{% endfor %}
{% for i in range(0, ( ec2_count_infra if ec2_count_infra is defined else 3 ) ) %}
infra{{ i + 1 }}.{{ clusterid }}.{{ dns_domain }} openshift_node_group_name='node-config-infra'
{% endfor %}
[nodes:children]
masters

{% if deploy_ocs |default('true') | bool and deploy_ocs is defined %}
{% if ec2_count_infra + ec2_count_node >= 6 %}
[glusterfs]
{% for i in range(0, ( ec2_count_node if ec2_count_node is defined else 3 ) ) %}
node{{ i + 1 }}.{{ clusterid }}.{{ dns_domain }} glusterfs_zone={{ loop.index }} glusterfs_devices='[ "/dev/nvme3n1" ]'
{% endfor %}

[glusterfs_registry]
{% for i in range(0, ( ec2_count_infra if ec2_count_infra is defined else 3 ) ) %}
infra{{ i + 1 }}.{{ clusterid }}.{{ dns_domain }} glusterfs_zone={{ loop.index }} glusterfs_devices='["/dev/nvme3n1"]'
{% endfor %}
{% else %}

[glusterfs]
{% for i in range(0, ( ec2_count_infra if ec2_count_infra is defined else 3 ) ) %}
infra{{ i + 1 }}.{{ clusterid }}.{{ dns_domain }} glusterfs_zone={{ loop.index }} glusterfs_devices='["/dev/nvme3n1"]'
{% endfor %}
{% endif %}
{% endif %}
